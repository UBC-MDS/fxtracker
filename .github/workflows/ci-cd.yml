name: ci-cd

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Check-out repository
        uses: actions/checkout@v2

      - name: Install poetry
        uses: snok/install-poetry@v1

      - name: Install package
        run: poetry install

      - name: Test with pytest
        run: poetry run pytest tests/ --cov=fxtracker --cov-report=xml

      - name: Use Codecov to track coverage
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage.xml   # coverage report
        
      - name: Upload coverage to Codecov  
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

      - name: Build documentation
        run: poetry run make html --directory docs/
      
      - name: Check style
        run: poetry run flake8 --exclude=docs*

  cd:
    # Only run this job if the "ci" job passes
    needs: ci

    # Only run this job if new work is pushed to "main"
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Check-out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install poetry
        uses: snok/install-poetry@v1

      - name: Install package
        run: poetry install

      # - name: Temporarily disable "include administrators" branch protection
      #   uses: benjefferies/branch-protection-bot@master
      #   if: always()
      #   with:
      #     access-token: ${{ secrets.ACCESS_TOKEN }} 
      #     branch: ${{ github.event.repository.default_branch }}
            
      # - name: Bump version and tagging and publish
      #   run: |
      #     git config --local user.email "action@github.com"
      #     git config --local user.name "GitHub Action"
      #     git pull origin master
      #     poetry run semantic-release version
      #     poetry version $(grep "version" */__init__.py | cut -d "'" -f 2 | cut -d '"' -f 2)
      #     git commit -m "Add changes" -a
          
      # - name: Push package version changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
          
      # - name: Enable "include administrators" branch protection
      #   uses: benjefferies/branch-protection-bot@master
      #   if: always()  # Force to always run this step to ensure "include administrators" is always turned back on
      #   with:
      #     access-token: ${{ secrets.ACCESS_TOKEN }}
      #     owner: UBC-MDS
      #     repo: fxtracker
      #     branch: ${{ github.event.repository.default_branch }}
          
      # - name: Get release tag version from package version
      #   run: |
      #     echo ::set-output name=release_tag::$(grep "version" */__init__.py | cut -d "'" -f 2 | cut -d '"' -f 2)
      #   id: release
      
      - name: Use Python Semantic Release to prepare release
        env:
          # This token is created automatically by GH Actions
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            git config user.name github-actions
            git config user.email github-actions@github.com
            poetry run semantic-release publish

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Test install from TestPyPI
        run: |
            pip install \
            --index-url https://test.pypi.org/simple/ \
            --extra-index-url https://pypi.org/simple \
            fxtracker

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
